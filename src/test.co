# Copyright (c) 2011 Uwe Jugel

say = -> console.log arguments...

wikifile = ""
xmlfile = ""

assert = (expression, name, text) ->
	console.error text unless expression
	console.log "Test passed: #{name}"
	return

Test = do ->
	tests = []

	testFn = ( name, fn ) ->
		if name?
			if fn?
				addTest name, fn
			else
				runTest getTest name
		else
			runAll()
	
	addTest = (name, fn) ->
		tests.push
			name: name
			run: -> fn()

	runTest = (test) ->
		say "starting test '#{test.name}'"
		test.run()

	getTest = (name) ->
		say "get"
		return t for t in tests when t.name is name

	runAll = ->
		say "all"
		runTest t for t in tests

	return testFn


Test "convert test file", ->
	say '''
	---------------------------------------------------
	test.co: "Add your tests to src/test.co!"
	---------------------------------------------------
	Starting test...
	'''

	convert = require("./mm2wiki").convert

	fs = require "fs"
	xmlfile = fs.readFileSync "./test.mm", "UTF-8"
	wikifile = fs.readFileSync "./test.wiki", "UTF-8"

	assert xmlfile.length > 0, "file test", "FileError: xmlfile has zero length"
	assert wikifile.length > 0, "file test", "FileError: wikifile has zero length"


	callback = (err, result) ->
		assert result == wikifile, "simple conversion", "ConverterError: unsupported input: #{result}"

		if err then console.error result, "\n!=\n", wikifile
		else console.log result
	
	convert xmlfile, callback

Test "convert via command line", ->
	say "starting command line test via mm2wiki.cli"
	cli = require("./mm2wiki").cli
	cli "./test.mm", "UTF-8", (err, result) ->
		if err then console.error err
		else console.log result
	return

Test()


